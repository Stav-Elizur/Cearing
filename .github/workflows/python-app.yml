# This workflow will install Python dependencies, load the dataset, and run the training script on CI with cache to dataset.

name: Python application

on:
  push:

permissions:
  contents: read

env:
  DATASET_CACHE_DIR: dataset_cached

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Restore cached dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ''

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          pip install pose-format
          pip install mediapipe
          pip install git+https://github.com/sign-language-processing/datasets.git
          pip install vidgear
          pip install protobuf==3.19.6
          touch /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/google/__init__.py
          touch /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/google/protobuf/internal/builder.py
          cp builder.py /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/google/protobuf/internal/builder.py
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Cache dependencies
        uses: actions/cache@v2
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        with:
          path: /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-dependencies-

      - name: Generate Sign2Mint
        run: |
          sudo apt install ffmpeg
          export PYTHONPATH=$PYTHONPATH:/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/
          cd Poses
          python -m generate_signsuisse

      - name: Upload Artifact Videos
        uses: actions/upload-artifact@v2
        with:
          name: Videos
          path: Poses/Videos
          retention-days: 5

      - name: Upload Artifact Poses
        uses: actions/upload-artifact@v2
        with:
          name: Poses
          path: Poses/Poses
          retention-days: 5

      - name: Upload Artifact Svgs
        uses: actions/upload-artifact@v2
        with:
          name: Svgs
          path: Poses/Svgs
          retention-days: 5
#
#      - name: Generate Photos
#        run: |
#          export PYTHONPATH=$PYTHONPATH:/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/
#          cd sign_writing_approach
#          python -m generate_signissue_dataset
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: fixed_signsuisse
#          path: sign_writing_approach/resources/fixed_signsuisse.jsonl
#          retention-days: 5
#
#  load_dataset:
#    runs-on: ubuntu-latest
#    needs: install_dependencies
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Restore cached dependencies
#        uses: actions/cache@v2
#        with:
#          path: /opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/
#          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/requirements*.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-dependencies-
#
#      - name: Restore dataset
#        uses: actions/cache@v2
#        id: cache-dataset
#        with:
#          path: ${{ env.DATASET_CACHE_DIR }}
#          key: ${{ runner.os }}-dataset-${{ hashFiles('**/requirements*.txt') }}
#          restore-keys: ''
#
#      - name: Load dataset
#        if: steps.cache-dataset.outputs.cache-hit != 'true'
#        run: |
#          export PYTHONPATH=$PYTHONPATH:/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/
#          python -m dataset.data
#
#      - name: Cache dataset
#        uses: actions/cache@v2
#        if: steps.cache-dataset.outputs.cache-hit != 'true'
#        with:
#          path: ${{ env.DATASET_CACHE_DIR }}
#          key: ${{ runner.os }}-dataset-${{ hashFiles('**/requirements*.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-dataset-
#
#  train:
#    runs-on: ubuntu-latest
#    needs: load_dataset
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Restore cached dependencies
#        uses: actions/cache@v2
#        with:
#          path: /opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/
#          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/requirements*.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-dependencies-
#
#      - name: Restore dataset
#        uses: actions/cache@v2
#        id: cache-dataset
#        with:
#          path: ${{ env.DATASET_CACHE_DIR }}
#          key: ${{ runner.os }}-dataset-${{ hashFiles('**/requirements*.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-dataset-
#
#      - name: Run Train
#        run: |
#          export PYTHONPATH=$PYTHONPATH:/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/
#          python -m train
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: BestModel
#          path: models/1/model.ckpt
#          retention-days: 5